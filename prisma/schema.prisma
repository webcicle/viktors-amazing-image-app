// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @unique @default(cuid())
  userName     String    @unique @default(uuid())
  alias        String    @default(uuid())
  uploads      Image[]
  profileImage String?
  likes        Like[]
  comments     Comment[]
  followers    Follows[] @relation("following")
  following    Follows[] @relation("follower")
  dislikes     Dislike[]
}

model Follows {
  follower    User   @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
}

model Image {
  id         String    @id @default(cuid())
  caption    String
  created    DateTime  @default(now())
  uploadedBy User      @relation(fields: [userId], references: [id])
  userId     String
  likes      Like[]
  comments   Comment[]

  dislikes Dislike[]
  tags     Tag[]
}

model Tag {
  id      String  @id @default(cuid())
  tagName String  @unique
  images  Image[]
}


model Like {
  id      String @id @default(cuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  image   Image  @relation(fields: [imageId], references: [id])
  imageId String
}

model Dislike {
  id      String @id @default(cuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  image   Image  @relation(fields: [imageId], references: [id])
  imageId String
}

model Comment {
  id      String @id @default(cuid())
  comment String
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  image   Image  @relation(fields: [imageId], references: [id])
  imageId String
}
